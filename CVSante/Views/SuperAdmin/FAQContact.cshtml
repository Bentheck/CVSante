@model IEnumerable<CVSante.Models.FAQ>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <title>FAQ Contact</title>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
</head>
<body>
    <div class="container mt-4">
        <div class="row">
            <!-- Sidebar with list of tickets -->
            <div class="col-md-4">
                <h2>Questions reçues</h2>
                <div class="list-group" id="ticketList">
                    @foreach (var ticket in Model)
                    {
                        <a class="list-group-item list-group-item-action @((ticket.IsNew ? "bg-info text-white" : ""))" data-id="@ticket.Id">
                            @ticket.Sujet
                            @if (ticket.IsNew)
                            {
                                <span class="badge badge-danger ml-2">Nouveau</span>
                            }
                        </a>
                    }
                </div>
            </div>

            <!-- Details section -->
            <div class="col-md-8">
                <div id="details-container">
                    <p>Sélectionnez un sujet dans la liste pour afficher les détails.</p>
                </div>
            </div>
        </div>
    </div>

    <script>
        $(document).ready(function () {
            var currentTicketId = null;

            // Function to refresh the details container
            function refreshDetails(id) {
                $.get('@Url.Action("GetDetails", "SuperAdmin")/' + id, function (data) {
                    $('#details-container').html(data);
                }).fail(function () {
                    alert('Échec de la récupération des détails du ticket.');
                });
            }

            // Fetch and display details on subject selection
            $('#ticketList').on('click', '.list-group-item', function () {
                currentTicketId = $(this).data('id');
                refreshDetails(currentTicketId);
            });

            // Add comment
            $('#details-container').on('submit', '#addCommentForm', function (event) {
                event.preventDefault();
                var form = $(this);
                $.post(form.attr('action'), form.serialize(), function () {
                    if (currentTicketId) {
                        refreshDetails(currentTicketId); // Refresh the details of the current ticket
                    }
                }).fail(function () {
                    alert('Échec de l’ajout du commentaire.');
                });
            });

            // Edit comment
            $('#details-container').on('submit', '.editCommentForm', function (event) {
                event.preventDefault();
                var form = $(this);
                $.post(form.attr('action'), form.serialize(), function () {
                    if (currentTicketId) {
                        refreshDetails(currentTicketId); // Refresh the details of the current ticket
                    }
                }).fail(function () {
                    alert('Échec de la mise à jour du commentaire.');
                });
            });

            // Delete comment
            $('#details-container').on('submit', '.deleteCommentForm', function (event) {
                event.preventDefault();
                var form = $(this);
                $.post(form.attr('action'), form.serialize(), function () {
                    if (currentTicketId) {
                        refreshDetails(currentTicketId); // Refresh the details of the current ticket
                    }
                }).fail(function () {
                    alert('Échec de la suppression du commentaire.');
                });
            });

            // Mark as read
            $('#details-container').on('click', '#markAsRead', function () {
                if (currentTicketId) {
                    $.post('@Url.Action("MarkAsRead", "SuperAdmin")/' + currentTicketId, function () {
                        var listItem = $('#ticketList .list-group-item[data-id="' + currentTicketId + '"]');
                        listItem.removeClass('bg-info text-white').find('.badge-danger').remove();
                        // Refresh the details of the current ticket
                        refreshDetails(currentTicketId);
                    }).fail(function () {
                        alert('Échec de la marque comme lu.');
                    });
                }
            });
        });
    </script>
</body>
</html>
