@model PaginatedList<CVSante.Models.HistoriqueParam>
@using CVSante.Tools

@{
    ViewData["Title"] = "History";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


<div class="search-container mb-4">
    <form method="get" asp-action="History">
        <!-- Pass sortOrder and pagination information through the form -->
        <input type="hidden" name="sortOrder" value="@ViewData["CurrentSortOrder"]" />
        <input type="hidden" name="pageNumber" value="1" />
        <input type="hidden" name="pageSize" value="@Model.PageSize" />

        <div class="form-group row">
            <label class="col-md-2 col-form-label">Plage de dates :</label>
            <div class="col-md-3">
                <input type="date" class="form-control" name="dateFrom" value="@ViewData["CurrentFilterDateFrom"]" />
            </div>
            <label class="col-md-1 col-form-label text-center">À</label>
            <div class="col-md-3">
                <input type="date" class="form-control" name="dateTo" value="@ViewData["CurrentFilterDateTo"]" />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-2 col-form-label">ID param :</label>
            <div class="col-md-3">
                <input type="text" class="form-control" name="idParam" value="@ViewData["CurrentFilterIdParam"]" />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-2 col-form-label">Nom param :</label>
            <div class="col-md-3">
                <input type="text" class="form-control" name="nomParam" value="@ViewData["CurrentFilterNomParam"]" />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-2 col-form-label">Type d'action :</label>
            <div class="col-md-3">
                <input type="text" class="form-control" name="actionType" value="@ViewData["CurrentFilterActionType"]" placeholder="Type d'action" />
            </div>
            <div class="col-md-2 d-inline-flex">
                <div>
                    <button type="submit" class="btn btn-primary">Recherche</button>
                </div>
                <div>
                    <a asp-action="Index" asp-controller="Admin" class="btn btn-light text-primary ms-3">
                        <i class="fas fa-arrow-left"></i> Retour à l'acceuil
                    </a>
                </div>
            </div>
        </div>
    </form>
</div>


@if (Model != null && Model.Any())
{
    <h3>Historique des Actions:</h3>

    <div class="col-md-12">
        <table class="table table-striped">
            <thead class="thead-light">
                <tr>
                    <th class="col-md-1">
                        @* Generate URL for sorting by Id *@
                        @{
                            string idSortOrder = (string)ViewData["CurrentSortOrder"] == "id_desc" ? "id_asc" : "id_desc";
                        }
                        <a href="@Url.Action("History", new { sortOrder = idSortOrder, pageNumber = Model.PageIndex, pageSize = Model.PageSize, dateFrom = ViewData["CurrentFilterDateFrom"], dateTo = ViewData["CurrentFilterDateTo"], idParam = ViewData["CurrentFilterIdParam"], nomParam = ViewData["CurrentFilterNomParam"], actionType = ViewData["CurrentFilterActionType"] })" class="text-primary">
                            Id
                            @if ((string)ViewData["CurrentSortOrder"] == "id_desc")
                            {
                                <i class="fas fa-arrow-down"></i>
                            }
                            else if ((string)ViewData["CurrentSortOrder"] == "id_asc")
                            {
                                <i class="fas fa-arrow-up"></i>
                            }
                        </a>
                    </th>
                    <th class="col-md-1">
                        @* Generate URL for sorting by Matricule *@
                        @{
                            string nameSortOrder = (string)ViewData["CurrentSortOrder"] == "name_desc" ? "name_asc" : "name_desc";
                        }
                        <a href="@Url.Action("History", new { sortOrder = nameSortOrder, pageNumber = Model.PageIndex, pageSize = Model.PageSize, dateFrom = ViewData["CurrentFilterDateFrom"], dateTo = ViewData["CurrentFilterDateTo"], idParam = ViewData["CurrentFilterIdParam"], nomParam = ViewData["CurrentFilterNomParam"], actionType = ViewData["CurrentFilterActionType"] })" class="text-primary">
                            Matricule
                            @if ((string)ViewData["CurrentSortOrder"] == "name_desc")
                            {
                                <i class="fas fa-arrow-down"></i>
                            }
                            else if ((string)ViewData["CurrentSortOrder"] == "name_asc")
                            {
                                <i class="fas fa-arrow-up"></i>
                            }
                        </a>
                    </th>
                    <th class="col-md-2">
                        @* Generate URL for sorting by Date *@
                        @{
                            string dateSortOrder = (string)ViewData["CurrentSortOrder"] == "date_desc" ? "date_asc" : "date_desc";
                        }
                        <a href="@Url.Action("History", new { sortOrder = dateSortOrder, pageNumber = Model.PageIndex, pageSize = Model.PageSize, dateFrom = ViewData["CurrentFilterDateFrom"], dateTo = ViewData["CurrentFilterDateTo"], idParam = ViewData["CurrentFilterIdParam"], nomParam = ViewData["CurrentFilterNomParam"], actionType = ViewData["CurrentFilterActionType"] })" class="text-primary">
                            Date
                            @if ((string)ViewData["CurrentSortOrder"] == "date_desc")
                            {
                                <i class="fas fa-arrow-down"></i>
                            }
                            else if ((string)ViewData["CurrentSortOrder"] == "date_asc")
                            {
                                <i class="fas fa-arrow-up"></i>
                            }
                        </a>
                    </th>
                    <th class="col-md-12">
                        @* Generate URL for sorting by Action *@
                        @{
                            string actionSortOrder = (string)ViewData["CurrentSortOrder"] == "action_desc" ? "action_asc" : "action_desc";
                        }
                        <a href="@Url.Action("History", new { sortOrder = actionSortOrder, pageNumber = Model.PageIndex, pageSize = Model.PageSize, dateFrom = ViewData["CurrentFilterDateFrom"], dateTo = ViewData["CurrentFilterDateTo"], idParam = ViewData["CurrentFilterIdParam"], nomParam = ViewData["CurrentFilterNomParam"], actionType = ViewData["CurrentFilterActionType"] })" class="text-primary">
                            Action
                            @if ((string)ViewData["CurrentSortOrder"] == "action_desc")
                            {
                                <i class="fas fa-arrow-down"></i>
                            }
                            else if ((string)ViewData["CurrentSortOrder"] == "action_asc")
                            {
                                <i class="fas fa-arrow-up"></i>
                            }
                        </a>
                    </th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.HistId</td>
                        <td>@item.FkParam.Matricule</td>
                        <td>@item.Date.AddHours(-4).ToString("dd/MM/yyyy HH:mm:ss")</td>
                        <td>@item.Action</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
        <div class="pagination-container mt-4">
            <nav aria-label="Page navigation">
                <div class="d-flex justify-content-between align-items-center">
                    <ul class="pagination mb-0">
                        @{
                            // Number of pages to display between ellipses
                            int pageRange = 5;

                            // Calculate the start and end pages for the range
                            int startPage = Math.Max(1, Model.PageIndex - (pageRange / 2));
                            int endPage = Math.Min(Model.TotalPages, startPage + pageRange - 1);

                            // Adjust startPage if endPage is near the end
                            if (endPage - startPage + 1 < pageRange)
                            {
                                startPage = Math.Max(1, endPage - pageRange + 1);
                            }
                        }

                        @* First page link *@
                        <li class="page-item @(Model.PageIndex == 1 ? "disabled" : "")">
                            <a class="page-link"
                               asp-action="History"
                               asp-route-pageNumber="1"
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-sortOrder="@ViewData["CurrentSortOrder"]"
                               asp-route-dateFrom="@ViewData["CurrentFilterDateFrom"]"
                               asp-route-dateTo="@ViewData["CurrentFilterDateTo"]"
                               asp-route-idParam="@ViewData["CurrentFilterIdParam"]"
                               asp-route-nomParam="@ViewData["CurrentFilterNomParam"]"
                               asp-route-actionType="@ViewData["CurrentFilterActionType"]"
                               aria-label="First">
                                &laquo;&laquo; Première
                            </a>
                        </li>

                        @* Previous page link *@
                        <li class="page-item @(Model.PageIndex == 1 ? "disabled" : "")">
                            <a class="page-link"
                               asp-action="History"
                               asp-route-pageNumber="@(Model.PageIndex - 1)"
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-sortOrder="@ViewData["CurrentSortOrder"]"
                               asp-route-dateFrom="@ViewData["CurrentFilterDateFrom"]"
                               asp-route-dateTo="@ViewData["CurrentFilterDateTo"]"
                               asp-route-idParam="@ViewData["CurrentFilterIdParam"]"
                               asp-route-nomParam="@ViewData["CurrentFilterNomParam"]"
                               asp-route-actionType="@ViewData["CurrentFilterActionType"]"
                               aria-label="Previous">
                                &laquo; Précédente
                            </a>
                        </li>

                        @* Page numbers links *@
                        @for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                                <a class="page-link"
                                   asp-action="History"
                                   asp-route-pageNumber="@i"
                                   asp-route-pageSize="@Model.PageSize"
                                   asp-route-sortOrder="@ViewData["CurrentSortOrder"]"
                                   asp-route-dateFrom="@ViewData["CurrentFilterDateFrom"]"
                                   asp-route-dateTo="@ViewData["CurrentFilterDateTo"]"
                                   asp-route-idParam="@ViewData["CurrentFilterIdParam"]"
                                   asp-route-nomParam="@ViewData["CurrentFilterNomParam"]"
                                   asp-route-actionType="@ViewData["CurrentFilterActionType"]">
                                    @i
                                </a>
                            </li>
                        }

                        @* Next page link *@
                        <li class="page-item @(Model.PageIndex == Model.TotalPages ? "disabled" : "")">
                            <a class="page-link"
                               asp-action="History"
                               asp-route-pageNumber="@(Model.PageIndex + 1)"
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-sortOrder="@ViewData["CurrentSortOrder"]"
                               asp-route-dateFrom="@ViewData["CurrentFilterDateFrom"]"
                               asp-route-dateTo="@ViewData["CurrentFilterDateTo"]"
                               asp-route-idParam="@ViewData["CurrentFilterIdParam"]"
                               asp-route-nomParam="@ViewData["CurrentFilterNomParam"]"
                               asp-route-actionType="@ViewData["CurrentFilterActionType"]"
                               aria-label="Next">
                                Suivante &raquo;
                            </a>
                        </li>

                        @* Last page link *@
                        <li class="page-item @(Model.PageIndex == Model.TotalPages ? "disabled" : "")">
                            <a class="page-link"
                               asp-action="History"
                               asp-route-pageNumber="@Model.TotalPages"
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-sortOrder="@ViewData["CurrentSortOrder"]"
                               asp-route-dateFrom="@ViewData["CurrentFilterDateFrom"]"
                               asp-route-dateTo="@ViewData["CurrentFilterDateTo"]"
                               asp-route-idParam="@ViewData["CurrentFilterIdParam"]"
                               asp-route-nomParam="@ViewData["CurrentFilterNomParam"]"
                               asp-route-actionType="@ViewData["CurrentFilterActionType"]"
                               aria-label="Last">
                                Dernière &raquo;&raquo;
                            </a>
                        </li>
                    </ul>

                    <div class="ml-4">
                        <p>
                            Page @(Model.PageIndex) sur @Model.TotalPages
                        </p>
                    </div>
                </div>
            </nav>
        </div>
}
else
{
    <h4>Aucun enregistrement trouvé.</h4>
}